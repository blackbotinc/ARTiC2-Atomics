#TechniqueName: Signed Binary Proxy Execution: InstallUtil
#AtomicTestName: InstallUtil Uninstall method call - '/installtype=notransaction /action=uninstall' variant
#Language: ps1

#get_prereq_commands
New-Item -Type Directory (split-path PathToAtomicsFolder\T1218.004\src\InstallUtilTestHarness.ps1) -ErrorAction ignore | Out-Null
Invoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile "PathToAtomicsFolder\T1218.004\src\InstallUtilTestHarness.ps1"


#prereq_commands
if (Test-Path "PathToAtomicsFolder\T1218.004\src\InstallUtilTestHarness.ps1") {exit 0} else {exit 1}


#commands
# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly
. PathToAtomicsFolder\T1218.004\src\InstallUtilTestHarness.ps1

$InstallerAssemblyDir = "$Env:TEMP\"
$InstallerAssemblyFileName = "T1218.004.dll"
$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName

$CommandLine = "/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `"$InstallerAssemblyFullPath`""
$ExpectedOutput = 'Constructor_Uninstall_'

$TestArgs = @{
    OutputAssemblyDirectory = $InstallerAssemblyDir
    OutputAssemblyFileName = $InstallerAssemblyFileName
    InvocationMethod = 'Executable'
    CommandLine = $CommandLine
}

$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs

if ($ActualOutput -ne $ExpectedOutput) {
    throw @"
InstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.
Expected: $ExpectedOutput
Actual: $ActualOutput
"@
}


#cleanup_commands
$InstallerAssemblyDir = "$Env:TEMP\"
$InstallerAssemblyFileName = "T1218.004.dll"
$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName
Remove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore

